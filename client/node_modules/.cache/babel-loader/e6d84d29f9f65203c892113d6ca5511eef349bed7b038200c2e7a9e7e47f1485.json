{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mcree\\\\source\\\\repos\\\\FuelPredictionApp\\\\client\\\\src\\\\components\\\\fuelFormHistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/fuelFormHistory.css\";\nimport axios from \"axios\";\nimport Navbar from \"./navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FuelFormHistory = () => {\n  _s();\n  const [fuelQuoteHistory, setFuelQuoteHistory] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5001/api/fuelQuoteHistory\");\n        setFuelQuoteHistory(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Fuel Form History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"fuel-order-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Customer ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Gallons Requested\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delivery Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delivery Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Suggested Price / gallon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Amount Due\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: fuelQuoteHistory.length > 0 ? fuelQuoteHistory.map((fuelOrdersData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: fuelOrdersData.idfuelhistory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: fuelOrdersData.Gallons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: fuelOrdersData.Address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formattedDate(fuelOrdersData.DeliveryDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: fuelOrdersData.SuggestedP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: fuelOrdersData.Gallons * fuelOrdersData.SuggestedP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: \"No fuel quote history available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FuelFormHistory, \"9P6uO5CeD+50A8cCYXTIoLT6b3Q=\");\n_c = FuelFormHistory;\nexport default FuelFormHistory;\nexport const formattedDate = e => {\n  const dateFromBackend = e;\n  // Convert the string to a Date object\n  const dateObject = new Date(dateFromBackend);\n  // Get the components of the date (year, month, day)\n  const year = dateObject.getFullYear();\n  const month = dateObject.getMonth() + 1; // Months are zero-based, so we add 1\n  const day = dateObject.getDate();\n  // Create the desired date string in \"YYYY-MM-DD\" format\n  const result = `${year}-${month.toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n  return result;\n};\nvar _c;\n$RefreshReg$(_c, \"FuelFormHistory\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","FuelFormHistory","_s","fuelQuoteHistory","setFuelQuoteHistory","fetchData","response","get","data","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","fuelOrdersData","index","idfuelhistory","Gallons","Address","formattedDate","DeliveryDate","SuggestedP","colSpan","_c","e","dateFromBackend","dateObject","Date","year","getFullYear","month","getMonth","day","getDate","result","toString","padStart","$RefreshReg$"],"sources":["C:/Users/mcree/source/repos/FuelPredictionApp/client/src/components/fuelFormHistory.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/fuelFormHistory.css\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"./navbar\";\r\n\r\nconst FuelFormHistory = () => {\r\n  const [fuelQuoteHistory, setFuelQuoteHistory] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:5001/api/fuelQuoteHistory\"\r\n        );\r\n        setFuelQuoteHistory(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"table-container\">\r\n        <h1> Fuel Form History</h1>\r\n        <table className=\"fuel-order-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Customer ID</th>\r\n              <th>Gallons Requested</th>\r\n              <th>Delivery Address</th>\r\n              <th>Delivery Date</th>\r\n              <th>Suggested Price / gallon</th>\r\n              <th>Total Amount Due</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fuelQuoteHistory.length > 0 ? (\r\n              fuelQuoteHistory.map((fuelOrdersData, index) => (\r\n                <tr key={index}>\r\n                  <td>{fuelOrdersData.idfuelhistory}</td>\r\n                  <td>{fuelOrdersData.Gallons}</td>\r\n                  <td>{fuelOrdersData.Address}</td>\r\n                  <td>{formattedDate(fuelOrdersData.DeliveryDate)}</td>\r\n                  <td>{fuelOrdersData.SuggestedP}</td>\r\n                  <td>{fuelOrdersData.Gallons * fuelOrdersData.SuggestedP}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"5\">No fuel quote history available.</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        {/* <button onClick={handleSort}>Sort by Customer ID</button> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default FuelFormHistory;\r\n\r\nexport const formattedDate = (e) => {\r\n  const dateFromBackend = e;\r\n  // Convert the string to a Date object\r\n  const dateObject = new Date(dateFromBackend);\r\n  // Get the components of the date (year, month, day)\r\n  const year = dateObject.getFullYear();\r\n  const month = dateObject.getMonth() + 1; // Months are zero-based, so we add 1\r\n  const day = dateObject.getDate();\r\n  // Create the desired date string in \"YYYY-MM-DD\" format\r\n  const result = `${year}-${month.toString().padStart(2, \"0\")}-${day\r\n    .toString()\r\n    .padStart(2, \"0\")}`;\r\n  return result;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}