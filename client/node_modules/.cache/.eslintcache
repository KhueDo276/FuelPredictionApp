[{"/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/index.js":"1","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/App.js":"2","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/LoginForm.js":"3","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/fuelForm.js":"4","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/navbar.js":"5","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/fuelFormHistory.js":"6","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/homePage.js":"7"},{"size":146,"mtime":1688967188752,"results":"8","hashOfConfig":"9"},{"size":1995,"mtime":1688967188750,"results":"10","hashOfConfig":"9"},{"size":1431,"mtime":1688967188751,"results":"11","hashOfConfig":"9"},{"size":1831,"mtime":1688967188751,"results":"12","hashOfConfig":"9"},{"size":1166,"mtime":1688967188752,"results":"13","hashOfConfig":"9"},{"size":2576,"mtime":1689308105704,"results":"14","hashOfConfig":"9"},{"size":484,"mtime":1688967188751,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1c4lqw6",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/index.js",[],[],[],"/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/App.js",["41","42","43"],[],"import \"./App.css\";\nimport React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport HomePage from \"./components/homePage\";\nimport FuelFormHistory from \"./components/fuelFormHistory\";\nimport FuelForm from \"./components/fuelForm\";\nimport Navbar from \"./components/navbar\";\nimport LoginForm from \"./LoginForm\";\n\nfunction App() {\n  const adminUser = { name: \"Harry Potter\", password: \"123456\" };\n  const [user, setUser] = useState({ name: \"\" });\n  const [error, setError] = useState(\"\");\n  const history = useHistory();\n\n  const Login = (details) => {\n    console.log(details);\n    if (\n      details.name == adminUser.name &&\n      details.password == adminUser.password\n    ) {\n      console.log(\"Logged in\");\n      setUser({\n        name: details.name,\n      });\n    } else {\n      console.log(\"Details do not match!\");\n      setError(\"Details do not match!\");\n    }\n  };\n\n  const Logout = () => {\n    console.log(\"Logged out\");\n    setUser({ name: \"\" });\n    history.push(\"/login\"); // Redirect to the login page\n  };\n  return (\n    <>\n      <div>\n        {user.name != \"\" ? (\n          <div>\n            <h2>\n              {\" \"}\n              <Router>\n                <div>\n                  <Navbar />\n                  <Switch>\n                    <Route path=\"/\" exact component={HomePage} />\n                    <Route path=\"/fuelForm\" component={FuelForm} />\n                    <Route\n                      path=\"/fuelFormHistory\"\n                      component={FuelFormHistory}\n                    />\n\n                    <Redirect to=\"/\" />\n                  </Switch>\n                </div>\n              </Router>\n            </h2>\n            <button onClick={Logout}>Logout</button> {/* Logout button */}\n          </div>\n        ) : (\n          <div>\n            <LoginForm Login={Login} error={error} />{\" \"}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/LoginForm.js",[],[],"/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/fuelForm.js",["44","45"],[],"import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./fuelForm.css\";\r\n\r\nfunction FuelForm() {\r\n  const [gallons, setGallons] = useState(\"\");\r\n  const [address, setAddress] = useState(\"#\");\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [quote, getQuote] = useState(\"#\");\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Gallons:\", gallons);\r\n    console.log(\"Delivery Date:\", selectedDate);\r\n    // Add logic to handle form submission here\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <h1>Fuel Quote Form</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"gallons\">Number of Gallons Requesting:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"gallons\"\r\n          value={gallons}\r\n          onChange={(e) => setGallons(e.target.value)}\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"location\">Delivery Location: </label>\r\n        <input type=\"text\" id=\"address\" value={address} readOnly />\r\n        <br />\r\n        <label htmlFor=\"date\">Delivery Date:</label>\r\n        <br />\r\n        <DatePicker\r\n          id=\"date\"\r\n          selected={selectedDate}\r\n          onChange={(date) => setSelectedDate(date)}\r\n          dateFormat=\"MM/dd/yyyy\"\r\n          required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"quote\">Suggested price per gallon:</label>\r\n        <input type=\"text\" id=\"quote\" value={quote} readOnly />\r\n        <br />\r\n        <label htmlFor=\"amountDue\">Amount Due:</label>\r\n        <input type=\"text\" id=\"amountdue\" value={quote} readOnly />\r\n        <br />\r\n        <input type=\"submit\" value=\"Submit\" />\r\n        <br />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FuelForm;\r\n","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/navbar.js",["46"],[],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./navbar.css\";\n\nconst Navbar = () => {\n  const history = useHistory();\n  const handleLogout = () => {\n    console.log(\"Logout\");\n    history.push(\"/login\");\n  };\n\n  const [click, setClick] = useState(false);\n  const closeMobileMenu = () => setClick(false);\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"nav-links\">\n        <li>\n          <Link to=\"/\" onClick={closeMobileMenu}>\n            Home\n          </Link>\n        </li>\n      </ul>\n      <ul className=\"nav-links\">\n        <li>\n          <Link to=\"/profile\" onClick={closeMobileMenu}>\n            Profile\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/fuelForm\" onClick={closeMobileMenu}>\n            Fuel Form\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/fuelFormHistory\" onClick={closeMobileMenu}>\n            Fuel Form History\n          </Link>\n        </li>\n        <li>\n          <button className=\"logout-button\" onClick={handleLogout}>\n            Log Out\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/fuelFormHistory.js",[],[],"/Users/khuedo/Documents/GitHub/FuelPredictionApp/client/src/components/homePage.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":25,"column":20,"nodeType":"49","messageId":"50","endLine":25,"endColumn":22},{"ruleId":"47","severity":1,"message":"48","line":26,"column":24,"nodeType":"49","messageId":"50","endLine":26,"endColumn":26},{"ruleId":"47","severity":1,"message":"51","line":46,"column":20,"nodeType":"49","messageId":"50","endLine":46,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":8,"column":19,"nodeType":"54","messageId":"55","endLine":8,"endColumn":29},{"ruleId":"52","severity":1,"message":"56","line":10,"column":17,"nodeType":"54","messageId":"55","endLine":10,"endColumn":25},{"ruleId":"52","severity":1,"message":"57","line":12,"column":10,"nodeType":"54","messageId":"55","endLine":12,"endColumn":15},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'setAddress' is assigned a value but never used.","Identifier","unusedVar","'getQuote' is assigned a value but never used.","'click' is assigned a value but never used."]